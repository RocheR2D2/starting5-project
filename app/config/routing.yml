app:
    resource: '@AppBundle/Controller/'
    type: annotation

fos_user_security:
    resource: "@FOSUserBundle/Resources/config/routing/security.xml"

fos_user_profile:
    resource: "@FOSUserBundle/Resources/config/routing/profile.xml"
    prefix: /profile

fos_user_register:
    resource: "@FOSUserBundle/Resources/config/routing/registration.xml"
    prefix: /register

fos_user_resetting:
    resource: "@FOSUserBundle/Resources/config/routing/resetting.xml"
    prefix: /resetting

fos_user_change_password:
    resource: "@FOSUserBundle/Resources/config/routing/change_password.xml"
    prefix: /profile

dashboard:
    path: /dashboard
    defaults: { _controller: AppBundle:Dashboard:home }

my-teams:
    path: /my-teams
    defaults: { _controller: AppBundle:Dashboard:index }

team:
    path:     /team
    defaults: { _controller: AppBundle:Team:index }

players:
    path:     /players
    defaults: { _controller: AppBundle:Player:index }

players.guards:
    path:     /players/guards
    defaults: { _controller: AppBundle:Player:guards }

players.forwards:
    path:     /players/forwards
    defaults: { _controller: AppBundle:Player:forwards }

players.centers:
    path:     /players/centers
    defaults: { _controller: AppBundle:Player:centers }

players.profile:
    path:     /player/{playerId}
    defaults: { _controller: AppBundle:Player:player }
    requirements:
            id: '\d+'

quizz:
  path: /quizz
  defaults: {_controller:AppBundle:Quizz:index}

quizz.getRandomQuizz:
  path: /quizz/getRandomQuizz
  defaults: {_controller: AppBundle:Quizz:getRandomQuizz}

quizz.validateQuizz:
  path: /quizz/validateQuizz
  defaults: {_controller: AppBundle:Quizz:validateQuizz}

admin:
    path:     /admin
    defaults: { _controller: AppBundle:Admin:index }

admin.quizz:
  path: /admin/quizz
  defaults: {_controller: AppBundle:Admin:quizz}

admin.quizzForm:
  path: /admin/quizzForm
  defaults: {_controller: AppBundle:Admin:quizzForm}

admin.getAllQuizz:
  path: /admin/getAllQuizz
  defaults: {_controller: AppBundle:Admin:getAllQuizz}

user.team.new:
    path:     /team/new
    defaults: { _controller: AppBundle:Dashboard:new }
    methods:  [GET, POST]

user.team.new.getPlayers:
    path:     /team/getPlayers
    defaults: { _controller: AppBundle:Dashboard:getPlayer }
    methods:  [GET]

user.team.new.createTeam:
    path:     /team/createTeam
    defaults: { _controller: AppBundle:Dashboard:createTeam }
    methods:  [POST]

user.team.edit.editTeam:
      path:     /team/editTeam
      defaults: { _controller: AppBundle:Dashboard:editTeam }
      methods:  [POST]

user.team.edit:
    path:     /team/{id}/edit
    defaults: { _controller: AppBundle:Dashboard:edit }
    requirements:
            id: '\d+'
    methods:  [GET, POST]

user.players:
    path:     /my-players
    defaults: { _controller: AppBundle:MyPlayers:index }
    methods:  [GET, POST]

user.players.guard:
    path:     /my-players/guards
    defaults: { _controller: AppBundle:MyPlayers:guard }
    methods:  [GET]

user.players.forward:
    path:     /my-players/forwards
    defaults: { _controller: AppBundle:MyPlayers:forward }
    methods:  [GET]

user.players.center:
    path:     /my-players/centers
    defaults: { _controller: AppBundle:MyPlayers:center }
    methods:  [GET]

pack.opening:
    path:     /pack
    defaults: { _controller: AppBundle:Pack:packOpening }
    methods:  [GET, POST]

ajax.pack.opening:
    path:     /packopening
    defaults: { _controller: AppBundle:Pack:packContent }
    methods:  [POST]

pack.opener:
    path:     /pack-content
    defaults: { _controller: AppBundle:Pack:opener }
    methods:  [GET]

discard.player:
    path:     /discard
    defaults: { _controller: AppBundle:MyPlayers:discardPlayer }
    methods:  [POST]

players.next:
    path:     /next
    defaults: { _controller: AppBundle:MyPlayers:playersNext }
    methods:  [POST]

players.previous:
    path:     /next
    defaults: { _controller: AppBundle:MyPlayers:playersPrevious }
    methods:  [POST]

pointGuards.next:
    path:     /nextPointGuards
    defaults: { _controller: AppBundle:Dashboard:pgNext }
    methods:  [POST]

shootingGuards.next:
    path:     /nextShootingGuards
    defaults: { _controller: AppBundle:Dashboard:sgNext }
    methods:  [POST]

smallForwards.next:
    path:     /nextSmallForwards
    defaults: { _controller: AppBundle:Dashboard:sfNext }
    methods:  [POST]


powerForwards.next:
    path:     /nextPowerForwards
    defaults: { _controller: AppBundle:Dashboard:pfNext }
    methods:  [POST]

centers.next:
    path:     /nextCenters
    defaults: { _controller: AppBundle:Dashboard:cNext }
    methods:  [POST]

shopPlayers:
    path:     /shopPlayers
    defaults: { _controller: AppBundle:Shop:shopPlayers }
    methods:  [GET]

shopPlayers.buy:
    path:     /shopPlayers
    defaults: { _controller: AppBundle:Shop:buyPlayers }
    methods:  [POST]

get.myStadiums:
    path:     /json/myStadiums
    defaults: { _controller: AppBundle:Stadium:myStadiums }
    methods:  [GET]

get.myTrainers:
    path:     /json/myTrainers
    defaults: { _controller: AppBundle:Stadium:myTrainers }
    methods:  [GET]

get.myTeam:
    path:     /json/{id}/myTeam/
    defaults: { _controller: AppBundle:Dashboard:myTeam }
    requirements:
            id: '\d+'
    methods:  [GET]

updateOffensiveRating:
    path:     /updateOffensiveRating
    defaults: { _controller: AppBundle:Player:updateOffensiveRating }
    methods:  [GET]

updateDefensiveRating:
    path:     /updateDefensiveRating
    defaults: { _controller: AppBundle:Player:updateDefensiveRating }
    methods:  [GET]

updatePlayerRarity:
    path:     /updatePlayerRarity
    defaults: { _controller: AppBundle:Player:updatePlayerRarity }
    methods:  [GET]

battle.index:
    path:     /battle
    defaults: { _controller: AppBundle:Battle:index }
    methods:  [GET]

battle.search:
    path:     /battle/search
    defaults: { _controller: AppBundle:Battle:search }
    methods:  [POST]

battle.accept:
    path:     /battle/accept
    defaults: { _controller: AppBundle:Battle:accept }
    methods:  [POST]

battle.decline:
    path:     /battle/decline
    defaults: { _controller: AppBundle:Battle:decline }
    methods:  [POST]

battle.list:
    path:     /battle/list
    defaults: { _controller: AppBundle:Battle:list }
    methods:  [GET]

battle:
    path:     /battle
    defaults: { _controller: AppBundle:Battle:confront }
    methods:  [POST]

battle.detail:
    path:     /battle/{battleId}
    defaults: { _controller: AppBundle:Battle:detail }
    requirements:
            battleId: '\d+'

round.detail:
    path:     /battle/{battleId}/play/{roundId}
    defaults: { _controller: AppBundle:Round:detail }
    requirements:
            battleId: '\d+'
            roundId: '\d+'

round.detail.played:
    path:     /battle/{battleId}/played/{roundId}
    defaults: { _controller: AppBundle:Round:detailPlayed }
    requirements:
            battleId: '\d+'
            roundId: '\d+'

play.create:
    path:     /battle/new/play
    defaults: { _controller: AppBundle:Round:createPlay }
    methods:  [POST]

get.myBattlePlayers:
    path:     /json/myBattlePlayers/{battleId}/{roundId}
    defaults: { _controller: AppBundle:Round:getBattlePlayers }
    methods:  [POST]